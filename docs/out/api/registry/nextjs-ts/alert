{"data":{"files":[{"name":"Alert.tsx","content":"import React, { forwardRef, HTMLProps } from 'react';\nimport { cn } from '@/lib/utils'; // Import the cn function\n\ninterface AlertProps extends HTMLProps<HTMLDivElement> {\n    type?: 'default' | 'success' | 'danger' | 'warning';\n}\n// Alert component\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(({ children, className = \"\", type = 'default', ...props }, ref) => {\n    return (\n        <div ref={ref} className={cn(\"relative p-3 mb-4 rounded-lg\", getAlertStyles(type), className)} role=\"alert\" {...props}>\n            {children}\n        </div>\n    );\n});\n\n// AlertIcon component\nconst AlertIcon = forwardRef<HTMLDivElement, HTMLProps<HTMLDivElement>>(({ children, className = \"\", ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"absolute w-[2.5rem] text-3xl h-[2.5rem] flex justify-center items-center\", className)} {...props}>\n      {children}\n    </div>\n  );\n});\n\n// AlertTitle component\nconst AlertTitle = forwardRef<HTMLHeadingElement, HTMLProps<HTMLHeadingElement>>(({ children, className = \"\", ...props }, ref) => {\n  return (\n    <h3 ref={ref} className={cn(\"ml-12 font-semibold\", className)} {...props}>\n      {children}\n    </h3>\n  );\n});\n\n// AlertDescription component\nconst AlertDescription = forwardRef<HTMLDivElement, HTMLProps<HTMLDivElement>>(({ children, className = \"\", ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"ml-12\", className)} {...props}>\n      {children}\n    </div>\n  );\n});\n\n// Utility function to get styles based on alert type\nconst getAlertStyles = (type: 'default' | 'success' | 'danger' | 'warning') => {\n  switch (type) {\n    case 'success':\n      return 'bg-green-100 text-green-700';\n    case 'danger':\n      return 'bg-red-100 text-red-700';\n    case 'warning':\n      return 'bg-yellow-100 text-yellow-700';\n    default:\n      return 'bg-background text-foreground';\n  }\n};\n\nAlert.displayName = 'Alert'\nAlertIcon.displayName = 'AlertIcon'\nAlertTitle.displayName = 'AlertTitle'\nAlertDescription.displayName = 'AlertDescription'\n\nexport { Alert, AlertIcon, AlertTitle, AlertDescription, getAlertStyles };","targetPath":"/components/ui/alert/Alert.tsx"},{"name":"utils.ts","content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","targetPath":"/lib/utils.ts"}],"dependencies":{"dependencies":{"clsx":"^2.1.1","tailwind-merge":"^3.0.1"},"devDependencies":{}}}}